<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>1面、降版します 特命記者の事件簿-3版 炸弹恐怖分子</title>
      <link href="/2024/10/30/1%E9%9D%A2%E3%80%81%E9%99%8D%E7%89%88%E3%81%97%E3%81%BE%E3%81%99-%E7%89%B9%E5%91%BD%E8%A8%98%E8%80%85%E3%81%AE%E4%BA%8B%E4%BB%B6%E7%B0%BF-%E7%88%86%E5%BC%BE%E3%83%86%E3%83%AD%E3%83%AA%E3%82%B9%E3%83%88/"/>
      <url>/2024/10/30/1%E9%9D%A2%E3%80%81%E9%99%8D%E7%89%88%E3%81%97%E3%81%BE%E3%81%99-%E7%89%B9%E5%91%BD%E8%A8%98%E8%80%85%E3%81%AE%E4%BA%8B%E4%BB%B6%E7%B0%BF-%E7%88%86%E5%BC%BE%E3%83%86%E3%83%AD%E3%83%AA%E3%82%B9%E3%83%88/</url>
      
        <content type="html"><![CDATA[<p>把整理部已经完成的报纸版面送到印刷厂的工序，就叫做降版。<br>《每日经济新闻》晨报的情况是一共会有四次降版。第一次降版的第十一版是在十九点，十二版是二十一点半，十三版是二十三点，最后一版也就是第十四版是凌晨一点三十分。<br>挂在柱子上的数字时钟显示现在是晚上零点四十五分三十二秒。还剩下四十五分钟，时间还很充足。<br>可是，为什么偏偏是在这种时候，来了出稿部这个可恶的编辑呢？<br>桃果在心里狠狠地咒骂着。<br>“这次的新闻是，综合商社里的实力者，富国通商的M&amp;A（合并及收购）。富国通商此次将对便利店业界第三名的富国商城实施TOB（股票公开收购）。”<br>（注：综合商社，是日本首创且特有的一种商业组织，是以贸易为主导，多种经营并存，集贸易、金融、信息、仓储、运输、组织与协调等综合功能于一体的跨国公司形式，比如大家比较熟悉的三菱商事、三井物产、住友商事这种。）<br>编辑部企业部的编辑柿沼龙则像个警察一样，拼命念着手上的笔记，那是企业部记者常木翠玲通过电话传达的特别素材的概要。<br>那副行为举止简直就像是他自己取得了特别素材一样。<br>健壮身躯，浅黑色的脸，如同他那急躁的性格一样短短的眉毛，锐利的目光，头发两侧剃得很短，光溜溜的头发梳向左后方。这幅样貌让人联想起能干的外资不动产企业的业务员。<br>但是，能看出他能干的只有外表。<br>Bomber——<br>这个男人被整理部的部员们如此称呼、如此恐惧着。这一Bomber（炸弹恐怖分子）这一称呼的由来，是因为他太迟向整理部提交原稿了。<br>出稿部记者——&gt;出稿部编辑——&gt;整理部的版面校对<br>原稿是按照这个顺序流动的。<br>而柿沼每次，都会阻塞这个流程。<br>作为编辑的编辑能力低下啦，或者假称“需要确认”给记者打长电话的癖好啦，导致原稿迟交的原因要列举起来真是数不清。<br>“柿沼编辑，请快点提交原稿！”<br>整理部部员用阴气逼人的表情大声斥责的身姿，桃果自己也见过好几次。<br>“马上就能提交了，再稍等一会儿。”<br>果不其然，从他说完这句话开始又过去了好几分钟。结果还是在眼看就要爆发（降版）之前才把原告扔到整理部。<br>而这么做的结果是，降版时间又大幅延迟了。以前还发生过焦急的整理部部员把标题打错了、造成订正的事情。<br>“对，正如您所知道的，富国通商目前是拥有富国商城51%的股份的控股公司。”<br>柱子上挂着的数字时钟显示现在是凌晨四十五分四十五秒，已经是每一秒都十分珍贵的情况了。<br>——可是Bomber自己的说法是？<br>场合有哪里不太对劲。柿沼不像是在正在对以桃果为首围着干部席的整理部部员、校对部和出稿部等人进行说明。——没错，现在，柿沼注意到的只有编辑部长，堂本烈任一人。<br>柿沼是堂本一手培养起来的，所以他正借着这个机会卖弄自己的忠诚。从刚才开始他就时不时地观察着编辑部长的表情。<br>——今天一定要早点提交原稿啊！<br>桃果死死盯着眼前的柿沼，如此默念着。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">注：</span><br><span class="line">“整理部面担”中的“面担”一词的解释是这样的：新聞社において紙面の校閲を行う担当者。おおむね紙面1ページにつき1人の面担が付くとされる。在报社里进行版面校对的人，通常是一人负责一页。）</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 轻小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1面、降版します 特命記者の事件簿-2版　被弾</title>
      <link href="/2024/10/28/1%E9%9D%A2%E3%80%81%E9%99%8D%E7%89%88%E3%81%97%E3%81%BE%E3%81%99-%E7%89%B9%E5%91%BD%E8%A8%98%E8%80%85%E3%81%AE%E4%BA%8B%E4%BB%B6%E7%B0%BF-2%E7%89%88-%E8%A2%AB%E5%BC%BE/"/>
      <url>/2024/10/28/1%E9%9D%A2%E3%80%81%E9%99%8D%E7%89%88%E3%81%97%E3%81%BE%E3%81%99-%E7%89%B9%E5%91%BD%E8%A8%98%E8%80%85%E3%81%AE%E4%BA%8B%E4%BB%B6%E7%B0%BF-2%E7%89%88-%E8%A2%AB%E5%BC%BE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">作品名：１面、降版します 特命記者の事件簿</span><br><span class="line">作者：松井蒼馬</span><br><span class="line">源地址：https://kakuyomu.jp/works/16817139556299078853</span><br></pre></td></tr></table></figure><p>“头版头条，改版！”<br>不死原桃果，被特别新闻在深夜突然袭击了。<br>桌面上的数字时钟显示现在是午夜零点四十分。位于从东京站走五分钟即可到达的好地段的高层建筑，就是《每日经济新闻》本社。现在，在这栋建筑物20层的编辑部里，热气即将到达最高潮。<br>“素材呢？”<br>“原稿有几行？”<br>“几点会来？”<br>“表格啊、图表啊或者照片呢？”<br>整个楼层都因为特别新闻而激动、兴奋起来。<br>在一片喧嚣骚动的漩涡中，一张脸与这番景象形成鲜明的对比，那就是整理部今天的头版负责人桃果，他重重地叹息、吐气。<br>“我还真是不走运啊……”<br>两年前，桃果因为误报事件，被所在的编辑部——企业部撤职。被下放的地方就是现在所属的编辑部整理部。<br>整理部，就是负责新闻的标题或排版的，在新闻制作过程中必要的部门。<br>一方面，出稿部的记者需要面对取材对象的策略和忍耐力，而整理记者需要的就是灵感或美感这样的与艺术相近的技术。当然，在整理部大放光彩的活跃人才也有很多。<br>尽管如此，他们在社内的地位依然很低。<br>因为这里作为像桃果一样有特别缘由的——“有前科”的记者被流放的地方的支流部门的意识很强。<br>虽然有着整理部记者的头衔，但并不写作原稿。<br>“整理部记者？被夺走了笔的那帮家伙，已经不能算是记者了吧。”<br>出稿部的记者会在背地里小声地说这种侮辱性的话。即使不说，那突然一瞬间的态度也表明了对整理部的蔑视——。<br>就连桃果自己，在这两年间也不止一次这么想过。<br>不能再写作新闻的自己。<br>——因为有误报的“前科”，什么时候才能再回到出稿部呢？<br>经过一段长时间的自暴自弃，桃果终于下定决心。<br>——尽早向这样的公司辞职吧。<br>现在是25岁。去年年末还登录了转职网站。第二新卒这张牌还能用。<br>（注：1、新卒指的是刚刚毕业的学生，<br>2、第二新卒则是已经工作了1-3年，职业生涯刚刚开始的人；<br>3、既卒是已经毕业但没有工作经验的人。尽管既卒没有工作经验，但只要毕业不超过三年，他们可以像新卒一样寻找工作机会。<br>新卒和既卒都是没有工作经验的人群，而第二新卒属于已有一定工作经验的人群。在求职过程中，新卒相对比较容易找到工作，而既卒和第二新卒可能会遇到一些挑战。就找工作的难易程度而言，新卒 &gt; 既卒 ≥ 第二新卒。）<br>可是，当他终于准备深深地踩下进入转职活动的加速器时，却遇到了意想不到的阻碍。<br>今年二月，整理部内对桃果发表了升职的人事命令。<br>四月一日，他被分配到负责头版等主要版面的“第一组”。“第一组”汇集了整理部内的精锐，这可是重大的提拔。<br>“太好了。”<br>“这是你还被期待着的证据啊。”<br>面对众多来自整理部内同事们的祝福，用笑脸掩饰过去的桃果，心里并不是这么想的。<br>——真是被做了多余的事情。<br>桃果对部内升迁感到愤怒。第一组在整理部中是特别忙碌的小组。<br>——这样的话不就没法正经开始转职活动了吗。<br>于是，今天是他首次负责头版的整个版面，然而……<br>“桃果，赶紧给我过来！你这家伙（注：おどれ，广岛方言）要负责头版的整个版面吧？你打算怎么排版？”<br>吓人的广岛方言让桃果的思考都烟消云散了，他慌忙从头版负责的座位上站起来。<br>桃果朝着发出声音的地方小步疾行。那个男人就在在编辑这一层中心的圆形桌子——通常被叫做“干部席”——包围形成的墙壁中。<br>河田文雄，整理部第一组的编辑主任。<br>他有着一张浅黑色的脸，深深地刻在左脸的伤痕是他的标志。他的面相让人联想起黑手党，笑着说道：<br>“桃果啊，素材是常木翠玲的M&amp;A！头版，全部重新排版！”<br>（注：<br>1.「筋の人間」实在没懂是什么意思，筋肉人？？搜了一下有人说在某小说里用来形容黑手党，啊那就这样吧……<br>2.M&amp;A，即买卖合同，是商业活动的一种。国际上习惯将兼并和收购合在一起使用，统称为M&amp;A。）</p>]]></content>
      
      
      
        <tags>
            
            <tag> 轻小说，特命记者事件簿 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>１面、降版します 特命記者の事件簿-1版 序章·大误报</title>
      <link href="/2024/10/27/%E7%89%B9%E6%8A%A5%E8%AE%B0%E8%80%85%E4%BA%8B%E4%BB%B6%E7%B0%BF/"/>
      <url>/2024/10/27/%E7%89%B9%E6%8A%A5%E8%AE%B0%E8%80%85%E4%BA%8B%E4%BB%B6%E7%B0%BF/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">作品名：１面、降版します 特命記者の事件簿</span><br><span class="line">作者：松井蒼馬</span><br><span class="line">源地址：https://kakuyomu.jp/works/16817139556299078853</span><br></pre></td></tr></table></figure><h1 id="书籍化简介"><a href="#书籍化简介" class="headerlink" title="书籍化简介"></a>书籍化简介</h1><p>报社里有叛徒。找出把素材泄露给其他报社的犯人！<br>“找出把素材泄露给其他报社的犯人。”在全国性报纸《每日经济新闻》负责标题和版面设计的整理记者藤崎桃果接到了这样意想不到的秘密命令。桃果因为在取材记者的第一年发生的误报事件被“贬”到了整理部，完全失去干劲、专注于转职活动的他被编辑部的二号人物权座叫了出来，开始寻找报社里的背叛者。他们定下约定，到查明背叛者之时，桃果就能作为取材记者官复原职。<br>在由原本是竞争关系的两家报社合并而成的这个报社里，派系斗争一直持续着。在被卷入怨恨、嫉妒、阴谋的报社里，桃果最终得到的冲击性的真相是？<br>连续反转的新闻记者小说。</p><h1 id="1版-序章·大误报"><a href="#1版-序章·大误报" class="headerlink" title="1版 序章·大误报"></a>1版 序章·大误报</h1><p>《致歉》 19日的晨报第一版的报道和标题中的“大日本职业下任社长小和田充氏”是错误的，在此道歉并更正。<br>不死原桃果咬住后槽牙，眉头紧皱地盯着桌面上记者终端机上的原稿。<br>“订正原稿是不行的。你写好道歉的原稿传到我这里来。”<br>负责编辑的人有如烈火般发怒，用响彻整个楼层的声音当面骂了桃果，说明着桃果的大误报带来的冲击的凄惨。</p><p>桃果，就在几小时前还是一位英雄。作为报道了头版头条的第一年记者，爬上了这家《每日经济新闻》社的明星的高位。然而……</p><p>通往明星记者的阶梯脆弱地崩塌了。</p><p>屈辱。愤怒。悲哀。<br>各种各样的感情在胸中翻涌奋起，变质成无法发泄的感情。<br>“开什么玩笑，说真的。”<br>吐出了这样的话，桃果的脑海里浮现出东前公弘那张青蛙一样的脸。他就是桃果负责的人才业界的实力者，“大日本职业”的社长。<br>松懈下垂的脸颊上的肉，瞪大的眼睛，变薄的头皮，肥硕的积蓄着脂肪的肚子——比起哺乳类更像是两栖类，这个人就是青蛙本身啊。<br>“我很期待明天的早报哦。”<br>对于桃果猜中的关于社长人事的话题，東前这么笑着回答道。万一素材搞错了……斩钉截铁地说“不对”的男人点了点头。<br>——自己的素材是正确的。<br>桃果是这么理解的。<br>“那我写了！”</p><p>所以仁义也切断了（PS.什么鬼这我不会），然而……<br>（PS.这个仁義“も切った”是什么意思，“仁義を切る”是黑帮报堂口，这里又是啥……）</p><p>今天早上六点，因为报道特别素材而产生的高扬感一点都没睡的桃果被尖锐的电子音吵醒了。<br>是大日本职业的宣传部长的来电。<br>“不死原先生，今天早上的报道……那是误报哦。”<br>听到这句话的瞬间，不死原的呼吸都停止了。<br>身体僵直、思考空转。心脏剧烈跳动了好几次，桃果才终于苏醒过来。<br>“这种事情不可能！东前社长已经承认了！”<br>桃果的声音颤抖到连自己都感到震惊的程度。<br>“不，我也是这么想的，其实刚才已经跟东前确认过了。关于这个……他本人否认说‘完全没说过那种话’。”<br>“怎么会……”<br>之后对话没能继续。<br>——还以为建立了信赖关系，而且那绝对是肯定的回答。<br>“哈……”<br>一瞬间漏出一口气，全身颤抖着。这时才开始意识到。<br>——自己被骗了。一定是因为那件事。<br>第二天的每日经济新闻早报<br>。对前一天头版头条新闻的大误报的道歉，悄悄地刊登在第三版左下的角落里。简直像是要藏起误报的可耻。<br>“不死原，我要把你从人才负责部门调走了。”<br>几天后，企业部长堂本烈任把桃果叫到自己的座位上并这么告知他。他一直看着桌上的蓝色文件夹，比起桃果更优先处理工作事物。用不带感情的声音淡淡地继续说道：<br>“还有，对了对了，你从四月份开始就要去整理部了。”<br>他一次也没有看在自己的座位旁直直地站着的桃果，这么说道。<br>啪嗒——堂本双手用力把文件夹关上了。<br>桃果听见的那个声音，就是自己的记者生涯关闭的声音。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 轻小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Github搭建个人博客</title>
      <link href="/2024/10/26/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2024/10/26/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>  平时搜资源或者问题的时候看到很多很好看的个人站，感觉还挺好玩的，啊那就自己试一下吧。主题也是可以安装配置的，感觉也不难，那还不是有手就行？？没想到一步一个坑，到处是陷阱QAQ。<br>  昨天开始玩到今天上午部署成功，除去吃饭睡觉看电影啥的，实际操作学习时长大概14个小时（我觉得），啥都不会走的就全是弯路，好在看到部署成功还是很高兴。</p><h2 id="一些提示"><a href="#一些提示" class="headerlink" title="一些提示"></a>一些提示</h2><ul><li>网上搜索到的一些指令是在Mac上操作的，如果是Windows系统，可能需要调整一下命令。</li></ul><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>  目前见过的大部分个人站应该都是用Hexo套主题模板来搭建然后Github部署的。Hexo是一个基于Node.js的静态博客框架，可以快速搭建个人博客；Github大家都懂的吧，就是一个代码托管平台（程序员交友网站？？）。个人博客编辑发布的基本流程就是：写好文章，然后用Hexo生成本地静态网页，然后上传到Github，Github会自动编译部署，然后就可以通过域名访问了。</p><h1 id="一些学习资源"><a href="#一些学习资源" class="headerlink" title="一些学习资源"></a>一些学习资源</h1><p>  用Hexo的人非常多，please善用搜索.</p><ul><li><a href="https://hexo.io/zh-cn/docs/">Hexo官方文档</a></li><li><a href="https://www.bilibili.com/video/BV1Yb411a7ty/?spm_id_from=333.337.search-card.all.click&vd_source=71317e740fa37f0c44917c26d27af26f">手把手教你从0开始搭建自己的个人博客 |无坑版视频教程| hexo</a></li><li><a href="https://www.bilibili.com/video/BV1q741167PJ/?spm_id_from=333.337.search-card.all.click&vd_source=71317e740fa37f0c44917c26d27af26f">Hexo搭建个人博客——系列教程</a></li></ul><h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><p>  首先必须安装Node.js和Git，大概是必须配置的环境。</p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>  <a href="https://git-scm.com/downloads/win">Git的官方网址</a>，根据指示操作即可。</p><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>  <a href="https://nodejs.org/zh-cn/">Node.js的官方网址</a>，根据指示操作即可。这里应该要注意安装版本的问题，在Hexo的文档里面有详细说明，反正我下的最新的。<br>  除了直接下载后安装还有其他的一些安装方式，可以参考Hexo的官方文档。</p><h2 id="安装Hexo-1"><a href="#安装Hexo-1" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>  所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。<br>  <code>npm install hexo-cli -g</code><br>  安装完成后，使用<code>hexo -v</code>命令查看是否安装成功。</p><p>  在这一步会遇到一个问题，一般来说安装都是失败的（忘记截图了QAQ）。</p><p>  具体的报错信息可能是net connectivity，或者报错信息有</p><blockquote><p>FetchError<br>ECONNREFUSED</p></blockquote><blockquote><p>If you are behind a proxy, please make sure that the ‘proxy’ config is set properly</p></blockquote><p>  <img src="https://github.com/Ranger84/pictures-blog/blob/main/img/20241026164515.png" alt="FetchError"></p><p>  这一步是超级大坑，花了我非常多的时间。搜索之后发现似乎国内要安装Hexo都会在这一步遇到问题。而且不仅是国内，好像大家都在这一步遇到过问题……<br>  这一步的报错信息说明是proxy，代理的问题，主要问题应该有两个</p><ul><li>1.代理设置问题，据说npm国内必须重新设置代理才能连上。必须根据自己的网络端口去正确设置代理。</li><li>2.npm源的问题，国内连npm源好像贼慢，得重新挂源</li></ul><h3 id="1）根据报错信息检查npm代理"><a href="#1）根据报错信息检查npm代理" class="headerlink" title="1）根据报错信息检查npm代理"></a>1）根据报错信息检查npm代理</h3><p>  <code>npm config get proxy</code><br>  <code>npm config get https-proxy</code><br>  然后查看返回值，我的情况是两项的返回值均为null。</p><h3 id="2）查询自己的代理服务器地址"><a href="#2）查询自己的代理服务器地址" class="headerlink" title="2）查询自己的代理服务器地址"></a>2）查询自己的代理服务器地址</h3><h4 id="第一种办法：netsh-winhttp-show-proxy"><a href="#第一种办法：netsh-winhttp-show-proxy" class="headerlink" title="第一种办法：netsh winhttp show proxy"></a>第一种办法：netsh winhttp show proxy</h4><ul><li>打开命令提示符。在Windows操作系统中，可以按下Win键+R，然后输入“cmd”。</li><li>在命令提示符中，输入“netsh winhttp show proxy”命令，并按下回车键。</li><li>在命令执行后，可以看到系统中的代理服务器设置信息。</li></ul><h4 id="第二种办法：浏览器设置（比如Chrome）"><a href="#第二种办法：浏览器设置（比如Chrome）" class="headerlink" title="第二种办法：浏览器设置（比如Chrome）"></a>第二种办法：浏览器设置（比如Chrome）</h4><ul><li>打开Chrome浏览器。</li><li>点击右上角的菜单按钮（三个竖点）。</li><li>选择“设置”。</li><li>在设置页面中，滚动到底部并点击“高级”。</li><li>在“网络”部分，点击“更改代理服务器设置”。</li><li>在Internet属性窗口的“连接”选项卡下，点击“LAN设置”。</li><li>在LAN设置窗口中，可以查看代理服务器的设置。</li></ul><h4 id="第三种办法：netstat-ano"><a href="#第三种办法：netstat-ano" class="headerlink" title="第三种办法：netstat -ano"></a>第三种办法：netstat -ano</h4><p>  netstat -ano是一个可以显示协议统计信息和当前 TCP&#x2F;IP 网络连接的系统指令。运行之后我猜那个出现次数最多而且频繁显示established的就是正确端口，经过上面一、二两种方法验证过后还真是……</p><h3 id="（3）重新设置代理端口"><a href="#（3）重新设置代理端口" class="headerlink" title="（3）重新设置代理端口"></a>（3）重新设置代理端口</h3><p>  <code>npm config set proxy http://127.0.0.1:xxxx</code><br>  <code>npm config set https-proxy http://127.0.0.1:xxxx</code></p><blockquote><p>xxxx部分要根据你自己查询到的设备端口信息来填，照抄网上的大概不行。</p></blockquote><h4 id="如果设置错误需要清空之前的代理设置"><a href="#如果设置错误需要清空之前的代理设置" class="headerlink" title="如果设置错误需要清空之前的代理设置"></a>如果设置错误需要清空之前的代理设置</h4><p>  <code>npm config set proxy null</code><br>  <code>npm config set https-proxy null</code></p><h3 id="（4）更换源"><a href="#（4）更换源" class="headerlink" title="（4）更换源"></a>（4）更换源</h3><p><code>npm config set registry=http://registry.npmjs.org</code><br><code>npm config set registry https://registry.npmmirror.com</code></p><p>正确设置代理后亲测这两个都是成功的。有些帖子可能会提到使用淘宝镜像源，但是亲测已经没法使用了，会提示certificate expired（这一点很多比较新的帖子也提到了）。</p><h3 id="（5）再次运行安装命令"><a href="#（5）再次运行安装命令" class="headerlink" title="（5）再次运行安装命令"></a>（5）再次运行安装命令</h3><p>此时再次运行<code>npm install hexo-cli -g</code>大概率就能成功了。</p><p>在安装完成后可能会有的一个提示信息是</p><blockquote><p>packages are looking for funding ，run npm fund for details<br>这个并不是报错也不会影响运行，这是提醒有一些软件包正在寻求资金支持。这个提示的目的是让开发者们意识到，许多开源项目的开发是由志愿者进行的，他们投入了大量时间和精力。我们可以选择通过为这些项目提供捐款来支持他们。</p></blockquote><p>如果不想在每次安装时看到这个提示，可以通过以下命令关闭：</p><p><code>npm config set fund false --location=global</code></p><h1 id="建立文档并预览网站效果"><a href="#建立文档并预览网站效果" class="headerlink" title="建立文档并预览网站效果"></a>建立文档并预览网站效果</h1><p>Hexo安装完成后，执行如下指令，Hexo就会在指定文件夹中建立所有所需的文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;自选文件夹名&gt;</span><br><span class="line">cd &lt;自选文件夹名&gt;（转到该目录下）</span><br><span class="line">npm install（安装依赖）</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="文件夹目录结构"><a href="#文件夹目录结构" class="headerlink" title="文件夹目录结构"></a>文件夹目录结构</h2><p>初始化好之后，你的文件夹看起来大概长这样：<br>.<br>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── source<br>|   ├── _drafts<br>|   └── _posts<br>└── themes<br><img src="https://github.com/Ranger84/pictures-blog/blob/main/img/20241026164432.png" alt="index.png"></p><ul><li>node modules是一些必要模块</li><li>source：用markdown写文章</li><li>themes：主题，可以做各种各样的配置</li><li>packages：使用到的包</li><li><strong>最重要的是<code>_config.yml</code>文件</strong>，这是Hexo的配置文件，里面有很多配置项，可以根据自己的需要进行修改。具体如何进行配置在<a href="https://hexo.io/zh-cn/docs/configuration">Hexo的官方文档中有详细说明</a>。</li></ul><p>非常方便快捷的方式是在VS Code中运行<code>ctrl+shift+E</code>（侧边栏那个图标像文件一样的explorer也可以）打开该文件夹，然后就可以在左边的侧边栏里看到文件夹的目录结构了，可以随时点击进入想要修改的文档作修改，非常方便。</p><p>然后在终端中输入<code>hexo server</code>就可以启动本地服务器，然后在浏览器中访问<code>http://localhost:4000</code>就可以看到本地的博客了。</p><h2 id="生成静态网站"><a href="#生成静态网站" class="headerlink" title="生成静态网站"></a>生成静态网站</h2><p>运行指令<code>hexo generate</code>就可以生成静态网站，这时候可以看到目录下多了一个名为public的文件夹生成的文件会放在<code>public</code>文件夹中。</p><h2 id="预览效果"><a href="#预览效果" class="headerlink" title="预览效果"></a>预览效果</h2><p>运行指令<code>hexo server</code>就可以启动本地服务器，然后在浏览器中访问<code>http://localhost:4000</code>就可以看到本地的博客了。这时候显示的是初始样式，后续可以自行配置其他主体或者自己编写。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>（1）运行完<code>hexo server</code>后，Hexo会监视文件变化，如果有变化，Hexo会自动重新生成静态网站。<br>（2）运行完<code>hexo server</code>后，请根据指示按<code>ctrl+c</code>停止Hexo。</p><h1 id="博客主题的安装和应用"><a href="#博客主题的安装和应用" class="headerlink" title="博客主题的安装和应用"></a>博客主题的安装和应用</h1><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>Hexo的主题是可以自己下载安装的，也可以直接使用官方的主题。<br>Hexo的官方网站上本身就提供了非常多的主题样式，可以根据操作安装配置。基本操作大差不差，以安装hexo-theme-matery为例：</p><ul><li>先转到themes目录下，<code>cd themes</code></li><li>然后使用<code>git clone</code>命令下载主题，<code>git clone https://github.com/blinkfox/hexo-theme-matery.git matery</code></li></ul><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>在使用<code>git clone</code>这一步，可能会遇到的一个问题是：</p><blockquote><p>报错原因：OpenSSL SSL_read:SSL_ERROR_SYSCALL, errno 0<br><img src="https://github.com/Ranger84/pictures-blog/blob/main/img/20241026164409.png" alt="git-clone-error.png"></p></blockquote><h3 id="（1）问题原因"><a href="#（1）问题原因" class="headerlink" title="（1）问题原因"></a>（1）问题原因</h3><p>出现的原因可能有两种</p><ul><li>因为git在拉取或者提交项目时，中间会有git的http和https代理，但是我们本地环境本身就有SSL协议了，所以取消git的https代理即可，不行再取消http的代理。</li><li>原因还有一个，当前代理网速过慢，所以偶尔会成功，偶尔失败（我不是这个原因）</li></ul><h3 id="（2）解决方案：取消代理"><a href="#（2）解决方案：取消代理" class="headerlink" title="（2）解决方案：取消代理"></a>（2）解决方案：取消代理</h3><p>运行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --unset https.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure><h3 id="3-关闭科学上网工具"><a href="#3-关闭科学上网工具" class="headerlink" title="(3)关闭科学上网工具"></a>(3)关闭科学上网工具</h3><p>我的情况是取消代理之后依然无法安装，报错信息为</p><blockquote><p>Failed to connect to github.com port 443 after 21118 ms:445 atter 21118ms:<br>Could not connect to server</p></blockquote><p><img src="https://github.com/Ranger84/pictures-blog/blob/main/img/20241026164525.png" alt="connect-error.png"></p><p>说明无法连接到服务器，参考一些网友的回复关闭了科学上网工具就可以正常下载了。</p><blockquote><p>参考帖子(<a href="https://blog.csdn.net/good_good_xiu/article/details/118567249)%E4%B8%AD%E7%9A%84%E8%AF%84%E8%AE%BA%EF%BC%8C%E8%AF%84%E8%AE%BA%E5%8C%BA%E8%BF%98%E6%9C%89%E4%B8%80%E7%A7%8D%E8%AF%B4%E6%B3%95%E6%98%AF%E5%9B%A0%E4%B8%BA%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84SSL%E8%AF%81%E4%B9%A6%E6%B2%A1%E6%9C%89%E7%BB%8F%E8%BF%87%E7%AC%AC%E4%B8%89%E6%96%B9%E6%9C%BA%E6%9E%84%E7%9A%84%E7%AD%BE%E7%BD%B2%EF%BC%8C%E6%89%80%E4%BB%A5%E6%89%8D%E6%8A%A5%E9%94%99">https://blog.csdn.net/good_good_xiu/article/details/118567249)中的评论，评论区还有一种说法是因为服务器的SSL证书没有经过第三方机构的签署，所以才报错</a><br>解决方法：git config –global http.sslVerify “false”<br>但我的情况使用这个方法后依然是失败的，但是关掉梯子之后就可以正常下载了.</p></blockquote><h3 id="（4）进一步的问题"><a href="#（4）进一步的问题" class="headerlink" title="（4）进一步的问题"></a>（4）进一步的问题</h3><p>主题开始下载，但是出现了新的报错（如图），这个我也不知道是什么原因，好像每次下载一些就会断掉，但是因为他能够开始下载所以尝试重复了运行几次，最后成功装完了……</p><p><img src="https://github.com/Ranger84/pictures-blog/blob/main/img/20241026164611.png" alt="repeat-clone.png"></p><h2 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h2><p>下载主题后，需要在<code>_config.yml</code>文件中进行配置。<br>找到<code>_config.yml</code>文件中的theme字段，将其值设置为<code>theme: hexo-theme-matery</code>然后保存。</p><p><img src="https://github.com/Ranger84/pictures-blog/blob/main/img/20241026164439.png" alt="config-theme.png"></p><h2 id="自定义你的博客结构"><a href="#自定义你的博客结构" class="headerlink" title="自定义你的博客结构"></a>自定义你的博客结构</h2><p>vs code左边目录里可以看到刚才下载好的主题下有各个组件，需要修改哪些部分就在对应的文件下修改代码。这里你可能需要一些基本的网络开发知识技术（如CSS），基于模板文件进行修改（编写、样式设定），做出自己喜欢的网页</p><h1 id="开始写作博客文章"><a href="#开始写作博客文章" class="headerlink" title="开始写作博客文章"></a>开始写作博客文章</h1><h2 id="关于Markdown"><a href="#关于Markdown" class="headerlink" title="关于Markdown"></a>关于Markdown</h2><p>写作博客文章使用Markdown语法。Markdown语法是一种标记语言，只需要记住一些非常简单的格式标记符号就可以输出格式整齐美观的文档，非常简单易上手。Hexo会自动将Markdown文件转换成HTML文件。</p><p>有很多好用的Markdown编辑器，如Typora、Mark Text等。我个人用过的是<strong>Typora</strong>和<strong>VS Code</strong>（没错VS Code也是可以编辑的），VS Code的Markdown插件也很好用。只要安装了相应的插件（比如live preview）写作过程中也可以实时预览文档效果，非常方便。</p><h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><p>运行指令<code>hexo new &quot;文章标题&quot;</code>就可以新建一篇文章，然后编辑文章内容。运行完成后就可以在文件目录里看到生成的Markdown格式文件了。<br>注意：每次修改文章后都需要重新运行<code>hexo generate</code>命令才会更新网站内容。</p><h2 id="文章传到页面"><a href="#文章传到页面" class="headerlink" title="文章传到页面"></a>文章传到页面</h2><ul><li>写完之后先运行<code>hexo clean</code>清除缓存</li><li>然后运行<code>hexo generate</code>生成静态网站，这时候可以看到上面生成了一大串文件（我看不懂是什么但是大概是HTML文件）。</li><li>运行<code>hexo server</code>，再次进入给出的链接，就可以看到刚才写的文章了。<br>依然需要注意<code>ctrl+c</code>停止Hexo。</li></ul><h1 id="将博客部署到远端"><a href="#将博客部署到远端" class="headerlink" title="将博客部署到远端"></a>将博客部署到远端</h1><p>博客的部署是通过Github Pages来实现的。blog部署到Github Pages上，可以让别人通过域名访问到你的博客。国内有些时候据说会比较慢，也有很多人部署到Gitee，有域名的话你也可以部署到自己买好的域名上哈哈哈哈。</p><h2 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a>注册Github账号</h2><p>默认已经拥有一个Github账号了，如果没有，需要注册一个。</p><h2 id="创建仓库repository"><a href="#创建仓库repository" class="headerlink" title="创建仓库repository"></a>创建仓库repository</h2><p>登录Github后，选择New repository，创建一个新的仓库。<br>这一步需要注意的是用户部署个人博客的github仓库的命名必须符合特定要求才行，<strong>仓库名必须是<code>username.github.io</code>，其中<code>username</code>是你的Github用户名</strong>。</p><h2 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h2><p>一些教学使用的部署方法大概对应官方给出的一键部署方法的改编版。</p><ul><li>首先安装hexo-deployer-git插件，<code>npm install hexo-deployer-git --save</code></li><li>打开<code>config.yml</code>文件，找到deploment块</li></ul><p><img src="https://github.com/Ranger84/pictures-blog/blob/main/img/20241026164458.png" alt="deploy.png"></p><ul><li><p>然后配置如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/username/username.github.io.git</span><br><span class="line">  branch: main</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>repo后面的地址可以在Github上直接复制你刚才建立好的仓库的地址。<br><strong>需要注意的是：每个英文冒号:后面都要加一个空格才行。</strong></p></li><li><p>运行<code>hexo clean</code>清除缓存</p></li><li><p>运行<code>hexo deploy</code>部署网站到Github</p></li></ul><h2 id="部署时会出现的问题"><a href="#部署时会出现的问题" class="headerlink" title="部署时会出现的问题"></a>部署时会出现的问题</h2><h3 id="（1）身份验证问题"><a href="#（1）身份验证问题" class="headerlink" title="（1）身份验证问题"></a>（1）身份验证问题</h3><p>运行<code>hexo clean</code>和<code>hexo deploy</code>之后出现红色报错，同时还会给出如下提示信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">***Please tell me who you are</span><br><span class="line">Run</span><br><span class="line"></span><br><span class="line">git config --global user.email &quot;you@example.com&quot;</span><br><span class="line">git config --global user.name &quot;your name&quot;</span><br><span class="line"></span><br><span class="line"> to set your account&#x27;s default identity.</span><br><span class="line">Omit --global to set the identity only in this repository.</span><br></pre></td></tr></table></figure><p><img src="https://github.com/Ranger84/pictures-blog/blob/main/img/20241026164503.png" alt="identity-authentication.png"></p><p>参照上面的信息，运行给出的命令，也就是输入你的Github账号和用户名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;you@example.com&quot;</span><br><span class="line">git config --global user.name &quot;your name&quot;</span><br></pre></td></tr></table></figure><p>这一步需要进行设备验证（旧一些的教程会弹出输入框，直接输入账号密码，但是目前必须通过验证）。有两种验证方式，根据提示操作输入验证码通过验证就可以了。</p><h3 id="2-隐私信息问题"><a href="#2-隐私信息问题" class="headerlink" title="(2)隐私信息问题"></a>(2)隐私信息问题</h3><p>通过身份验证、再次运行<code>hexo clean</code>和<code>hexo deploy</code>之后，出现如下报错：push declined due to repository rule violations</p><p><img src="https://github.com/Ranger84/pictures-blog/blob/main/img/20241026164415.png" alt="rule-violations.png"></p><p>这一步可能的原因是，Github会对仓库进行一些规则限制，比如禁止推送包含敏感信息的提交等，具体的解释说明可以在报错信息给出的网址上查阅。</p><p>解决这一问题的一个有效方案参见<a href="https://stackoverflow.com/questions/43378060/meaning-of-the-github-message-push-declined-due-to-email-privacy-restrictions/43378177">这篇回答</a>，<a href="https://blog.csdn.net/qq_26819733/article/details/78374129">CSDN关于这一问题的一篇日志</a>就是根据这篇回答给出的。</p><p>解决方法：</p><ul><li><p>1）使用以下命令查看当前的全局用户E-mail：<code>git config --global user.email</code></p></li><li><p>2）打开你的Github设置页（settings），找到Emails部分，这一部分有两个勾选框及各自的说明：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Keep my email address private </span><br><span class="line">Block command line pushes that expose my email address.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在第一个勾选框的说明中找到你的<code>GitHub noreply address</code>，它的形式为<code>&#123;ID（一串数字）&#125;+&#123;username&#125;@users.noreply.github.com</code></p></li><li><p>3）重新设置你的全局用户E-mail<br><code>git config --global user.email</code> 输入你刚才找到的<code>GitHub noreply address</code></p></li><li><p>4）重新运行<code>hexo clean</code>和<code>hexo deploy</code>命令，这时候应该就能成功部署了。</p></li></ul><p>我的情况是，在保持两个勾选框都选中且重新设置Email后依然部署失败，根据其他回答取消了第二个勾选框的勾选后部署成功。</p><ul><li>5）如果还是部署失败，可以尝试在命令行中输入<code>git push -u origin main</code>命令，手动推送到远程仓库。</li></ul><h2 id="查看网站"><a href="#查看网站" class="headerlink" title="查看网站"></a>查看网站</h2><p>部署成功后，可以直接将Github仓库的地址输入浏览器访问，就可以看到搭建好的个人博客了。</p><h1 id="一些参考文档"><a href="#一些参考文档" class="headerlink" title="一些参考文档"></a>一些参考文档</h1><h2 id="1-npm无法安装Hexo（代理原因）"><a href="#1-npm无法安装Hexo（代理原因）" class="headerlink" title="1.npm无法安装Hexo（代理原因）"></a>1.npm无法安装Hexo（代理原因）</h2><ul><li>（1）<a href="https://stackoverflow.com/questions/18419144/npm-not-working-read-econnreset">https://stackoverflow.com/questions/18419144/npm-not-working-read-econnreset</a></li><li>（2）<a href="https://stackoverflow.com/questions/20397883/npm-doesnt-install-any-modules-network-socket-hangs-up">https://stackoverflow.com/questions/20397883/npm-doesnt-install-any-modules-network-socket-hangs-up</a></li><li>（3）<a href="https://www.shazi.info/npm-%E8%A8%AD%E5%AE%9A-proxy-%E7%9A%84%E6%96%B9%E5%BC%8F/">https://www.shazi.info/npm-%E8%A8%AD%E5%AE%9A-proxy-%E7%9A%84%E6%96%B9%E5%BC%8F/</a></li><li>（4）<a href="https://www.kerrinz.com/archives/89.html%E2%80%8B">解决npm install代理报错</a></li><li>（5） <a href="https://hexo.io/zh-cn/docs/">Hexo官方文档</a>，都吐槽安装文档写得很烂（不是）</li><li>（6）<a href="https://sarakale.top/blog/posts/5fd82dbe/%E2%80%8B">记录 Hexo 和 npm 踩过的坑</a></li><li>(7)<a href="https://blog.csdn.net/lt012345/article/details/123934719">关于npm install 时报错errno ECONNREFUSED问题的解决</a></li><li>(8)<a href="https://cloud.tencent.com/developer/article/2266262%E2%80%8B">解决 npm install 报错 connect ECONNREFUSED 问题</a></li><li>(9)<a href="https://blog.csdn.net/okay_ing/article/details/136337710">packages are looking for funding ，run npm fund for details</a></li><li>(10)<a href="https://note-xuezhizhang.readthedocs.io/en/latest/%E5%8D%9A%E5%AE%A2%E8%BF%90%E7%BB%B4/hexo%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94hexo%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B.html#">hexo教程系列</a></li></ul><h2 id="2-主题安装部分"><a href="#2-主题安装部分" class="headerlink" title="2.主题安装部分"></a>2.主题安装部分</h2><ul><li>（1）<a href="https://blog.csdn.net/m0_56699208/article/details/139141778">解决 git：OpenSSL SSL_read: SSL_ERROR_SYSCALL, errno 0</a></li><li>（2）<a href="https://blog.csdn.net/good_good_xiu/article/details/118567249">git提交或克隆报错fatal: unable to access ‘https://github.com/tata20191003/autowrite.git/‘: Failed to connect</a></li><li>(3)<a href="https://blog.csdn.net/good_good_xiu/article/details/118567249">关于科学上网器和取消验证在这个帖子的评论区</a></li></ul><h2 id="3-远端部署部分"><a href="#3-远端部署部分" class="headerlink" title="3.远端部署部分"></a>3.远端部署部分</h2><ul><li>（1）<a href="https://stackoverflow.com/questions/43378060/meaning-of-the-github-message-push-declined-due-to-email-privacy-restrictions">更改邮箱设置</a></li><li>（2）<a href="https://medium.com/@mugaojoy/how-to-resolve-push-declined-due-to-repository-rule-violations-error-71901ea530e8">对隐私敏感信息设置的一些说明以及另一种解决方案</a></li></ul><h2 id="4-系列教程"><a href="#4-系列教程" class="headerlink" title="4.系列教程"></a>4.系列教程</h2><ul><li>（1）<a href="https://blog.manyacan.com/archives/2016/">Hexo教程系列</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/10/25/hello-world/"/>
      <url>/2024/10/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
